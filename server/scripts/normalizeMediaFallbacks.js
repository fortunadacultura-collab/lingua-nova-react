require('dotenv').config();
const { testConnection, query } = require('../config/database');

(async () => {
  console.log('üîÑ Iniciando normaliza√ß√£o global de m√≠dia (√°udio/v√≠deo)');
  try {
    await testConnection();

    // 1) Remover √°udio frontal quando houver v√≠deo frontal
    const clearFrontAudio = await query(
      `UPDATE cards
       SET front_audio_url = NULL,
           updated_at = CURRENT_TIMESTAMP
       WHERE front_video_url IS NOT NULL
         AND front_audio_url IS NOT NULL`
    );
    const clearedCount = clearFrontAudio?.changes || 0;
    console.log(`üßπ √Åudio frontal removido em cart√µes com v√≠deo frontal: ${clearedCount}`);

    // 2) Aplicar fallback: se n√£o h√° v√≠deo na frente, 
    //    e o √°udio frontal est√° ausente, usar o √°udio do verso
    const applyFallback = await query(
      `UPDATE cards
       SET front_audio_url = back_audio_url,
           updated_at = CURRENT_TIMESTAMP
       WHERE front_audio_url IS NULL
         AND front_video_url IS NULL
         AND back_audio_url IS NOT NULL`
    );
    const appliedCount = applyFallback?.changes || 0;
    console.log(`‚úÖ Fallback de √°udio aplicado (frente ‚Üê verso): ${appliedCount}`);

    console.log('üéâ Normaliza√ß√£o de m√≠dia conclu√≠da com sucesso.');
    process.exit(0);
  } catch (err) {
    console.error('‚ùå Falha na normaliza√ß√£o de m√≠dia:', err?.message || err);
    process.exit(1);
  }
})();